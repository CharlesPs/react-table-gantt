[{"/Users/carlosaguinaganunez/Desarrollo/ReactJS Apps/my-libraries/react-table-gantt/src/App.tsx":"1","/Users/carlosaguinaganunez/Desarrollo/ReactJS Apps/my-libraries/react-table-gantt/src/reportWebVitals.js":"2","/Users/carlosaguinaganunez/Desarrollo/ReactJS Apps/my-libraries/react-table-gantt/src/index.tsx":"3","/Users/carlosaguinaganunez/Desarrollo/ReactJS Apps/my-libraries/react-table-gantt/src/Components/Gantt/Gantt.tsx":"4","/Users/carlosaguinaganunez/Desarrollo/ReactJS Apps/my-libraries/react-table-gantt/src/Components/GanttTable/GanttTable.tsx":"5","/Users/carlosaguinaganunez/Desarrollo/ReactJS Apps/my-libraries/react-table-gantt/src/Components/GanttTable/GanttTable.styles.tsx":"6","/Users/carlosaguinaganunez/Desarrollo/ReactJS Apps/my-libraries/react-table-gantt/src/Components/GanttChart/GanttChart.tsx":"7","/Users/carlosaguinaganunez/Desarrollo/ReactJS Apps/my-libraries/react-table-gantt/src/Helpers/GanttChartFunctions.tsx":"8","/Users/carlosaguinaganunez/Desarrollo/ReactJS Apps/my-libraries/react-table-gantt/src/Components/GanttChart/GanttChartGrid.tsx":"9","/Users/carlosaguinaganunez/Desarrollo/ReactJS Apps/my-libraries/react-table-gantt/src/Components/GanttChart/GanttChartHeader.tsx":"10","/Users/carlosaguinaganunez/Desarrollo/ReactJS Apps/my-libraries/react-table-gantt/src/Components/GanttChart/GanttChartBody.tsx":"11","/Users/carlosaguinaganunez/Desarrollo/ReactJS Apps/my-libraries/react-table-gantt/src/Components/GanttItem/GanttItem.tsx":"12","/Users/carlosaguinaganunez/Desarrollo/ReactJS Apps/my-libraries/react-table-gantt/src/Components/GanttArrow/GanttArrow.tsx":"13","/Users/carlosaguinaganunez/Desarrollo/ReactJS Apps/my-libraries/react-table-gantt/src/Components/GanttTable/GanttTableRow.tsx":"14","/Users/carlosaguinaganunez/Desarrollo/ReactJS Apps/my-libraries/react-table-gantt/src/Components/GanttTable/GanttTableGroup.tsx":"15"},{"size":33425,"mtime":1610270503196,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1606762092518,"results":"18","hashOfConfig":"17"},{"size":479,"mtime":1606768331241,"results":"19","hashOfConfig":"17"},{"size":1263,"mtime":1609912942077,"results":"20","hashOfConfig":"17"},{"size":6276,"mtime":1610038258214,"results":"21","hashOfConfig":"17"},{"size":106,"mtime":1606814131109,"results":"22","hashOfConfig":"17"},{"size":2250,"mtime":1609740106488,"results":"23","hashOfConfig":"17"},{"size":5431,"mtime":1607903807729,"results":"24","hashOfConfig":"17"},{"size":4497,"mtime":1609742279339,"results":"25","hashOfConfig":"17"},{"size":2552,"mtime":1606812154125,"results":"26","hashOfConfig":"17"},{"size":1740,"mtime":1609802579351,"results":"27","hashOfConfig":"17"},{"size":794,"mtime":1609746658022,"results":"28","hashOfConfig":"17"},{"size":1727,"mtime":1606970773536,"results":"29","hashOfConfig":"17"},{"size":6052,"mtime":1610255125075,"results":"30","hashOfConfig":"17"},{"size":4331,"mtime":1608058543845,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ngipy6",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"45"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"/Users/carlosaguinaganunez/Desarrollo/ReactJS Apps/my-libraries/react-table-gantt/src/App.tsx",[],"/Users/carlosaguinaganunez/Desarrollo/ReactJS Apps/my-libraries/react-table-gantt/src/reportWebVitals.js",[],["69","70"],"/Users/carlosaguinaganunez/Desarrollo/ReactJS Apps/my-libraries/react-table-gantt/src/index.tsx",[],["71","72"],"/Users/carlosaguinaganunez/Desarrollo/ReactJS Apps/my-libraries/react-table-gantt/src/Components/Gantt/Gantt.tsx",[],"/Users/carlosaguinaganunez/Desarrollo/ReactJS Apps/my-libraries/react-table-gantt/src/Components/GanttTable/GanttTable.tsx",["73"],"/*eslint\narray-callback-return: \"off\"\n*/\n\nimport React from 'react'\n\nimport GanttTableRow from './GanttTableRow'\n\nimport styles from './GanttTable.styles'\n\ntype Props = {\n    tasks: any,\n    table: any,\n    onItemClick?: any,\n    onModifyTasks?: any,\n    headerHeight: any,\n    rowHeight: any,\n    styles: any,\n}\n\nconst GanttTable = (props: Props) => {\n\n    const onModifyItemOld = (ganttItem: any) => {\n\n        const tasks = props.tasks.map((_item: any) => {\n\n            // if (ganttItem.type === 'task') {\n\n            //     if (_item.type === 'task' && _item.task._id === ganttItem.task._id) {\n\n            //         return ganttItem\n            //     } else if (_item.type === 'group') {\n\n            //         _item.items.map((groupItem: any) => {\n\n\n            //         })\n            //     }\n            // } else {\n\n            //     if (_item.type === 'group' && _item._id === ganttItem._id) {\n\n            //         return ganttItem\n            //     }\n            // }\n\n            // if (_item.type === 'task' && ganttItem.type === 'task') {\n\n            //     if (_item.task._id === ganttItem.task._id) {\n\n            //         return ganttItem\n            //     }\n            // } else if (_item.type === 'group' && ganttItem.type === 'group') {\n\n            //     if (_item._id === ganttItem._id) {\n\n            //         return ganttItem\n            //     } else {\n\n            //         _item.items.map((groupItem: any) => {\n\n            //             if (groupItem.type === 'task') {\n\n\n            //             }\n            //         })\n            //     }\n            // }\n\n            return _item\n        })\n\n        props.onModifyTasks(tasks)\n    }\n\n    const onModifyItem = (ganttItem: any) => {\n\n        const ganttItems = props.tasks.map((_ganttItem: any, i: number) => {\n\n            if (ganttItem.i === i) {\n\n                if (ganttItem.j === undefined) {\n\n                    return ganttItem\n                } else {\n\n                    const groupItems = _ganttItem.items.map((groupItem: any, j: number) => {\n\n                        if (ganttItem.j === j) {\n\n                            if (ganttItem.k === undefined) {\n\n                                return ganttItem\n                            } else {\n\n                                const gItems = groupItem.items.map((gItem: any, k: number) => {\n\n                                    if (ganttItem.k === k) {\n\n                                        return ganttItem\n                                    }\n\n                                    return gItem\n                                })\n\n                                groupItem.items = gItems\n                            }\n                        }\n\n                        return groupItem\n                    })\n\n                    _ganttItem.items = groupItems\n                }\n            }\n\n            return _ganttItem\n        })\n\n        props.onModifyTasks(ganttItems)\n    }\n\n    const getTableItems = () => {\n\n        const tableItems: any = []\n\n        props.tasks.map((taskItem: any, i: number) => {\n\n            taskItem.i = i\n            taskItem.j = undefined\n            taskItem.k = undefined\n\n            tableItems.push(taskItem)\n\n            if (taskItem.type === 'group') {\n\n                taskItem.items.map((groupItem: any, j: number) => {\n\n                    groupItem.i = i\n                    groupItem.j = j\n\n                    tableItems.push(groupItem)\n\n                    if (groupItem.type === 'group') {\n\n                        groupItem.items.map((gItem: any, k: number) => {\n\n                            gItem.i = i\n                            gItem.j = j\n                            gItem.k = k\n\n                            tableItems.push(gItem)\n                        })\n                    }\n                })\n            }\n        })\n\n        return tableItems\n    }\n\n    return (\n        <div className=\"table-container\"\n            style={{\n                maxWidth: props.styles.tableMaxWidth,\n                overflow: 'hidden',\n            }}\n        >\n            <div className=\"table\"\n                style={{\n                    ...styles.table,\n                    height: (props.headerHeight + (getTableItems().length * props.rowHeight)),\n                    // width: props.table.tableWidth,\n                }}\n            >\n                <div className=\"thead\"\n                    style={{\n                        color: props.styles.tableThTextColor,\n                    }}\n                >\n                    <div className=\"thead-tr\"\n                        style={{\n                            backgroundColor: props.styles.headerBgColor,\n                            display: 'flex',\n                        }}\n                    >\n                        {props.table.columns.map((column: any, i: number) => (\n                            <div className=\"th\" key={i}\n                                style={{\n                                    display: 'flex',\n                                    flexDirection: 'column',\n                                    justifyContent: 'center',\n                                    fontWeight: 600,\n                                    backgroundColor: props.styles.headerBgColor,\n                                    width: column.width,\n                                    height: props.headerHeight,\n                                    ...column.style,\n                                }}\n                            >\n                                {column.name}\n                            </div>\n                        ))}\n                    </div>\n                </div>\n                <div className=\"tbody\">\n                    {getTableItems().map((ganttItem: any, i: number) => (\n                        <GanttTableRow key={i} index={i}\n                            onItemClick={props.onItemClick}\n                            onModifyItem={(ganttItem: any) => onModifyItem(ganttItem)}\n                            ganttItem={ganttItem}\n                            columns={props.table.columns}\n                            styles={props.styles}\n                        />\n                    ))}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default GanttTable\n",["74","75"],"/Users/carlosaguinaganunez/Desarrollo/ReactJS Apps/my-libraries/react-table-gantt/src/Components/GanttTable/GanttTable.styles.tsx",[],"/Users/carlosaguinaganunez/Desarrollo/ReactJS Apps/my-libraries/react-table-gantt/src/Components/GanttChart/GanttChart.tsx",["76","77","78"],"/Users/carlosaguinaganunez/Desarrollo/ReactJS Apps/my-libraries/react-table-gantt/src/Helpers/GanttChartFunctions.tsx",[],"/Users/carlosaguinaganunez/Desarrollo/ReactJS Apps/my-libraries/react-table-gantt/src/Components/GanttChart/GanttChartGrid.tsx",["79"],"/Users/carlosaguinaganunez/Desarrollo/ReactJS Apps/my-libraries/react-table-gantt/src/Components/GanttChart/GanttChartHeader.tsx",["80"],"\nimport React from 'react'\n\ntype Props = {\n    months: any,\n    days: any,\n    dayWidth: number,\n    styles: any,\n    locale: any,\n}\n\nconst GanttChartHeader = (props: Props) => {\n\n    const months_sizes = [ 42, 56, 46, 34, 40, 40, 34, 52, 74, 60, 80, 74 ]\n\n    const getMonthsXPositions = () => {\n\n        const xPositions: any = []\n\n        let posX = 0\n\n        props.months.map((_month: any, i: number) => {\n\n            const left = ((_month.days * props.dayWidth) / 2) - (months_sizes[_month.m] / 2)\n\n            xPositions.push(posX + (left >= 5 ? left : 5))\n\n            posX += props.dayWidth * _month.days\n        })\n\n        return xPositions\n    }\n\n    const getPaddingLeft = (day_num: number, dayWidth: number) => {\n\n        const center = dayWidth / 2\n\n        if (day_num <= 9) {\n\n            return center - 3\n        }\n\n        return center - 7\n    }\n\n    const monthsXPositions: any = getMonthsXPositions()\n\n    return (\n        <g id=\"chart-header\">\n            {props.months.map((month: any, i: number) => (\n                <text key={i}\n                    x={monthsXPositions[i]}\n                    y={props.styles.monthsTopPosition}\n                    fill={props.styles.monthsTextColor}\n                    style={{\n                        fontWeight: props.styles.monthsFontWeight,\n                    }}\n                >\n                    {props.locale.months[month.position]}\n                </text>\n            ))}\n            {props.days.map((_day: any, i: number) => (\n                <text key={i}\n                    x={getPaddingLeft(_day.dom, props.dayWidth) + (i * props.dayWidth)} \n                    y={props.styles.dowTopPosition}\n                    fill={props.styles.dowTextColor}\n                    style={{\n                        fontSize: props.styles.domFontSize,\n                        fontWeight: props.styles.domFontWeight,\n                    }}\n                >\n                    {props.locale.daysOfWeek[_day.dow]}\n                </text>\n            ))}\n            {props.days.map((_day: any, i: number) => (\n                <text key={i}\n                    x={getPaddingLeft(_day.dom, props.dayWidth) + (i * props.dayWidth)} \n                    y={props.styles.domTopPosition}\n                    fill={props.styles.domTextColor}\n                    style={{\n                        fontSize: props.styles.domFontSize\n                    }}\n                >\n                    {_day.dom}\n                </text>\n            ))}\n        </g>\n    )\n}\n\nexport default GanttChartHeader\n",["81","82"],"/Users/carlosaguinaganunez/Desarrollo/ReactJS Apps/my-libraries/react-table-gantt/src/Components/GanttChart/GanttChartBody.tsx",["83"],"\nimport React from 'react'\n\nimport GanttItem from '../GanttItem/GanttItem'\nimport GanttArrow from '../GanttArrow/GanttArrow'\n\nimport { getBoxPositionX, getTaskDays, fixRelationsDates, getRelations } from '../../Helpers/GanttChartFunctions'\n\ntype Props = {\n    start: string,\n    end: string,\n    ganttItems: any,\n    styles: any,\n}\n\nconst GanttChartBody = (props: Props) => {\n\n    const ganttItems = props.ganttItems.map((taskItem: any, i: number) => {\n\n        if (taskItem.type === 'task') {\n\n            taskItem.task.posX = getBoxPositionX(props.start, taskItem.task.startsAt, props.styles.dayWidth) + props.styles.rowTaskPaddingLeft\n            taskItem.task.posY = props.styles.headerHeight + (i * props.styles.rowHeight) + props.styles.rowTaskPaddingTop\n\n            taskItem.task.height = props.styles.rowTaskHeight\n            taskItem.task.width = props.styles.dayWidth * getTaskDays(taskItem.task.startsAt, taskItem.task.endsAt) - (props.styles.rowTaskPaddingLeft * 2)\n        }\n\n        return taskItem\n    })\n\n    const relations = getRelations(ganttItems)\n\n    return (\n        <g id=\"gantt-body\" className=\"gantt-body\">\n            <g id=\"gantt-relations\">\n                {relations.map((relation: any, i: number) => (\n                    <GanttArrow key={i}\n                        color='#000'\n                        width={1.4}\n                        {...relation}\n                    />\n                ))}\n            </g>\n            <g id=\"gantt-tasks\">\n                {ganttItems.map((ganttItem: any, i: number) => (\n                    <GanttItem key={i}\n                        itemData={ganttItem}\n                    />\n                ))}\n            </g>\n        </g>\n    )\n}\n\nexport default GanttChartBody\n","/Users/carlosaguinaganunez/Desarrollo/ReactJS Apps/my-libraries/react-table-gantt/src/Components/GanttItem/GanttItem.tsx",[],"/Users/carlosaguinaganunez/Desarrollo/ReactJS Apps/my-libraries/react-table-gantt/src/Components/GanttArrow/GanttArrow.tsx",[],"/Users/carlosaguinaganunez/Desarrollo/ReactJS Apps/my-libraries/react-table-gantt/src/Components/GanttTable/GanttTableRow.tsx",["84","85"],"/Users/carlosaguinaganunez/Desarrollo/ReactJS Apps/my-libraries/react-table-gantt/src/Components/GanttTable/GanttTableGroup.tsx",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"86","replacedBy":"90"},{"ruleId":"88","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":23,"column":11,"nodeType":"94","messageId":"95","endLine":23,"endColumn":26},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"96","severity":1,"message":"97","line":27,"column":47,"nodeType":"98","messageId":"99","endLine":27,"endColumn":49},{"ruleId":"96","severity":1,"message":"97","line":33,"column":54,"nodeType":"98","messageId":"99","endLine":33,"endColumn":56},{"ruleId":"96","severity":1,"message":"97","line":39,"column":58,"nodeType":"98","messageId":"99","endLine":39,"endColumn":60},{"ruleId":"96","severity":1,"message":"100","line":100,"column":56,"nodeType":"98","messageId":"101","endLine":100,"endColumn":58},{"ruleId":"96","severity":1,"message":"97","line":22,"column":51,"nodeType":"98","messageId":"99","endLine":22,"endColumn":53},{"ruleId":"86","replacedBy":"102"},{"ruleId":"88","replacedBy":"103"},{"ruleId":"92","severity":1,"message":"104","line":7,"column":40,"nodeType":"94","messageId":"95","endLine":7,"endColumn":57},{"ruleId":"105","severity":1,"message":"106","line":33,"column":8,"nodeType":"107","endLine":33,"endColumn":95,"suggestions":"108"},{"ruleId":"105","severity":1,"message":"109","line":33,"column":10,"nodeType":"110","endLine":33,"endColumn":94},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],["111"],["112"],"@typescript-eslint/no-unused-vars","'onModifyItemOld' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd",["111"],["112"],"'fixRelationsDates' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.ganttItem' and 'state'. Either include them or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.","ArrayExpression",["113"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","ConditionalExpression","no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},"Update the dependencies array to be: [props.ganttItem, state]",{"range":"116","text":"117"},[601,688],"[props.ganttItem, state]"]